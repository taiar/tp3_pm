package Gui.Screens;

import Database.Database;
import Gui.Windows.MainWindow;
import equipes.Equipe;
import pessoas.Pessoa;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import javax.xml.crypto.Data;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;

/**
 * Tela de formulário do cadastro de uma pessoa.
 */
public class CadastroPessoas extends AbstractScreen {

    private JPanel cadastroPessoas;
    private JTextField nomePessoa;
    private JTextField idadePessoa;
    private JButton cadastrarPessoaButton;
    private JComboBox<Pessoa.TipoDePessoa> funcaoPessoa;
    private JTable listagemPessoas;
    private DefaultTableModel listagemPessoasModel;

    public CadastroPessoas() {
        this.funcaoPessoa.setModel(new DefaultComboBoxModel<Pessoa.TipoDePessoa>(Pessoa.TipoDePessoa.values()));

        this.cadastrarPessoaButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                Pessoa pessoa = new Pessoa();
                pessoa.setNome(nomePessoa.getText());
                pessoa.setFuncao(funcaoPessoa.getItemAt(funcaoPessoa.getSelectedIndex()));
                pessoa.setIdade(Integer.valueOf(idadePessoa.getText()));

                JOptionPane.showMessageDialog(null, "Pessoa cadastrada com sucesso!");

                Database.get().Pessoa.adicionaRegistro(pessoa);
                Database.get().Pessoa.persiste();

                MainWindow.get().getTela().atualizaModel();
            }
        });

        String[] colunas = new String[]{"Nome", "Idade", "Função"};
        this.listagemPessoasModel = new DefaultTableModel(this.dadosParaListagem(), colunas);
        this.listagemPessoas.setModel(this.listagemPessoasModel);
        this.main.add(cadastroPessoas);
    }

    private String[][] dadosParaListagem() {
        ArrayList<String[]> dados = new ArrayList<String[]>();
        for (Pessoa e : Database.get().Pessoa.getRegistros()) {
            dados.add(new String[]{e.getNome(), String.valueOf(e.getIdade()), e.getFuncao().toString()});
        }
        String[][] dadosString = new String[dados.size()][3];
        dadosString = dados.toArray(dadosString);
        return dadosString;
    }

    @Override
    public void atualizaModel() {
        MainWindow.get().atualizarTela();
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        cadastroPessoas = new JPanel();
        cadastroPessoas.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(7, 2, new Insets(0, 0, 0, 0), -1, -1));
        final JLabel label1 = new JLabel();
        label1.setText("Cadastro de pessoas:");
        cadastroPessoas.add(label1, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 2, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JSeparator separator1 = new JSeparator();
        cadastroPessoas.add(separator1, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 2, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label2 = new JLabel();
        label2.setText("Nome: ");
        cadastroPessoas.add(label2, new com.intellij.uiDesigner.core.GridConstraints(2, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        nomePessoa = new JTextField();
        nomePessoa.setText("");
        cadastroPessoas.add(nomePessoa, new com.intellij.uiDesigner.core.GridConstraints(2, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        final JLabel label3 = new JLabel();
        label3.setText("Idade:");
        cadastroPessoas.add(label3, new com.intellij.uiDesigner.core.GridConstraints(3, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        idadePessoa = new JTextField();
        idadePessoa.setText("");
        cadastroPessoas.add(idadePessoa, new com.intellij.uiDesigner.core.GridConstraints(3, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        cadastrarPessoaButton = new JButton();
        cadastrarPessoaButton.setText("Cadastrar Pessoa");
        cadastroPessoas.add(cadastrarPessoaButton, new com.intellij.uiDesigner.core.GridConstraints(5, 0, 1, 2, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label4 = new JLabel();
        label4.setText("Função:");
        cadastroPessoas.add(label4, new com.intellij.uiDesigner.core.GridConstraints(4, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        funcaoPessoa = new JComboBox();
        funcaoPessoa.setEditable(true);
        funcaoPessoa.setEnabled(true);
        final DefaultComboBoxModel defaultComboBoxModel1 = new DefaultComboBoxModel();
        funcaoPessoa.setModel(defaultComboBoxModel1);
        cadastroPessoas.add(funcaoPessoa, new com.intellij.uiDesigner.core.GridConstraints(4, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JScrollPane scrollPane1 = new JScrollPane();
        cadastroPessoas.add(scrollPane1, new com.intellij.uiDesigner.core.GridConstraints(6, 0, 1, 2, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        listagemPessoas = new JTable();
        listagemPessoas.setEnabled(false);
        listagemPessoas.putClientProperty("html.disable", Boolean.TRUE);
        scrollPane1.setViewportView(listagemPessoas);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return cadastroPessoas;
    }
}
